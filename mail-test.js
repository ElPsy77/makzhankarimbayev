import 'dotenv/config';
import nodemailer from 'nodemailer';

const transporter = nodemailer.createTransport({
  host: process.env.CONFIRMATION_MAIL_HOST,
  port: Number(process.env.CONFIRMATION_MAIL_PORT),
  secure: false, // true –¥–ª—è –ø–æ—Ä—Ç–∞ 465, false –¥–ª—è 587
  auth: {
    user: process.env.CONFIRMATION_MAIL_USER,
    pass: process.env.CONFIRMATION_MAIL_PASS,
  },
});

const mailOptions = {
  from: `"Job Platform" <${process.env.CONFIRMATION_MAIL_USER}>`,
  to: process.env.CONFIRMATION_MAIL_CC,
  subject: 'üß™ –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã',
  text: '–ï—Å–ª–∏ —Ç—ã —á–∏—Ç–∞–µ—à—å —ç—Ç–æ ‚Äî –∑–Ω–∞—á–∏—Ç SMTP —Ä–∞–±–æ—Ç–∞–µ—Ç!',
};

async function sendConfirmationEmail(email) {
  console.log('üìß –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –Ω–∞ email:', email);
  transporter.sendMail(mailOptions, (error, info) => {
    if (error) {
      return console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);
    }
    console.log('‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', info.response);
  });
}

await sendConfirmationEmail(process.env.CONFIRMATION_MAIL_CC);
